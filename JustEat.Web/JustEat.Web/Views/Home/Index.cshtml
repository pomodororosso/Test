@using Newtonsoft.Json;
@using Newtonsoft.Json.Converters;
@model JustEat.Web.Models.RestaurantsViewModel
@{
    ViewBag.Title = "Restaurant Finder";
}

@section css
{
    <link href="~/Content/DataTables/css/jquery.dataTables.css" rel="stylesheet" />
}

<div class="row">
    <h2>Restaurant Finder</h2>
    @using (Html.BeginForm("index", "home", FormMethod.Post, new { @class = "form-inline" }))
    {
        @Html.AntiForgeryToken()
        @Html.TextBoxFor(model => model.Outcode, new { @class = "form-control", @placeholder = "Enter an outcode e.g. SE19" })
        <button id="findButton" type="submit" class="btn btn-default">Find</button>
        @Html.ValidationMessageFor(model => model.Outcode, "", new { @class = "text-danger" })
    }
</div>
<hr />
@if (Model != null && Model.Restaurants != null)
{
    if (Model.Restaurants.Any())
    {
        <div class="row">
            <div id="map" style="height: 200px;">
            </div>
        </div>
        <div class="row">
            <hr />
            <table id="restaurantsTable" class="table table-striped">
                <thead>
                    <tr>
                        <td></td>
                        <td>Name</td>
                        <td>Cuisine Types</td>
                        <td>Rating</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var restaurant in Model.Restaurants)
                    {
                        <tr data-id='@restaurant.Id' data-lat='@restaurant.Latitude' data-long='@restaurant.Longitude' data-desc='@restaurant.Description' data-logourl='@restaurant.LogoUrl'>
                            <td><img src="@restaurant.LogoUrl" width="20" height="20" /></td>
                            <td>@restaurant.Name</td>
                            <td>@string.Join(", ", restaurant.CuisineTypes)</td>
                            <td>@restaurant.RatingAverage</td>
                            <td><a class="showMarkerInfo" href="" data-id='@restaurant.Id'>show on map</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="row">
            <h3>No results</h3>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/DataTables/jqueryDataTables")
    @if (Model != null && Model.Restaurants != null && Model.Restaurants.Any())
    {
        <script src="http://maps.google.com/maps/api/js?key=AIzaSyAdWhIi2Zis9frn1gQDW8LcJn7uCll9H-c&libraries=drawing" type="text/javascript"></script>
        <script type="text/javascript">
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                streetViewControl: true,
                mapTypeControl: true,
                mapTypeControlOptions: {
                    style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                }

            });
            var markers = [];
            var infowindow = new google.maps.InfoWindow();

            $(document).ready(function () {
                var table = $('#restaurantsTable').DataTable({
                    "order": [[3, 'desc']]
                });
                drawMarkers();

                table.on('draw', function () {
                    drawMarkers();
                });
            });

            function drawMarkers() {
                removeMarkers();
                var marker;
                var bounds = new google.maps.LatLngBounds();
                $.each($('#restaurantsTable tbody tr'), function (key, value) {
                    var id = value.dataset.id;
                    var lat = value.dataset.lat;
                    var long = value.dataset.long;
                    var desc = value.dataset.desc;
                    var logourl = value.dataset.logourl;
                    var position = new google.maps.LatLng(lat, long);
                    bounds.extend(position)

                    marker = new google.maps.Marker({
                        position: position,
                        map: map
                    });

                    markers.push({restaurantId:id,value:marker,logourl:logourl,desc:desc});
                    google.maps.event.addListener(marker, 'click', (function (marker, key) {
                        return function () {
                            infowindow.setContent("<img src='" + logourl + "' width='20' height='20'/>  " + desc);
                            infowindow.open(map, marker);
                        }
                    })(marker, key));

                    // Automatically center the map fitting all markers on the screen
                    map.fitBounds(bounds);
                });
            }

            function removeMarkers() {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].value.setMap(null);
                }

                markers = [];
            }

            function showMarkerInfo(id) {
                for(i=0;i<markers.length;i++){
                    if(markers[i].restaurantId == id)
                    {
                        infowindow.setContent("<img src='" + markers[i].logourl + "' width='20' height='20'/>  " + markers[i].desc);
                        infowindow.open(map, markers[i].value);
                    }
                }
            }    
            
            $('.showMarkerInfo').on('click', function (event) {
                event.preventDefault();
                var link = $(event.target)
                var id = link.data('id');
                showMarkerInfo(id);
            });
        </script>
    }
}
